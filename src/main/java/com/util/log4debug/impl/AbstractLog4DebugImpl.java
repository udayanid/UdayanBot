/* Generated by Together */

package com.util.log4debug.impl;

import java.io.PrintWriter;
import java.io.StringWriter;

abstract public class AbstractLog4DebugImpl implements InternalLog4Debug, Cloneable {

  public AbstractLog4DebugImpl() {
  }

// ################ Log Stack Trace ##########################

  protected final void logStackTrace(int logLevel, Throwable t) {
  	log(logLevel, String.valueOf(t),t);
  }

  private String getPrintStackTrace(Throwable t) {
  	if (t == null) return String.valueOf(t);
  	StringWriter sw = new StringWriter();
  	t.printStackTrace(new PrintWriter(sw));
  	return sw.toString();
  }

  public final void severeStackTrace(Throwable t) {
    // logging severe with an Exception is remapped to FATAL
    // to discriminate from logging severe messages without Exceptions
    if (isLoggable(LOG_LEVEL_FATAL)) {
      logStackTrace(LOG_LEVEL_FATAL, t);
    }
  }

  public final void warnStackTrace(Throwable t) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      logStackTrace(LOG_LEVEL_WARNING, t);
    }
  }

  public final void infoStackTrace(Throwable t) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      logStackTrace(LOG_LEVEL_INFO, t);
    }
  }

  public final void debugStackTrace(Throwable t) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      logStackTrace(LOG_LEVEL_DEBUG, t);
    }
  }

//################ Log Message and StackTrace ##########################

  protected void log(int logLevel, Object o, Throwable t) {
    log(logLevel,getString(new Object[]{o,getPrintStackTrace(t)}));
  }

  public final void severe(Object o, Throwable t) {
    // logging severe with an Exception is remapped to FATAL
    // to discriminate from logging severe messages without Exceptions
    if (isLoggable(LOG_LEVEL_FATAL)) {
      log(LOG_LEVEL_FATAL,o,t);
    }
  }

  public final void warn(Object o, Throwable t) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING,o,t);
    }
  }

  public final void info(Object o, Throwable t) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO,o,t);
    }
  }

  public final void debug(Object o, Throwable t) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG,o,t);
    }
  }

// ################ Log ##########################

  protected abstract void log(int logLevel, String msg);

  public final void severe(Object obj1) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1}));
    }
  }

  public final void warn(Object obj1) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1}));
    }
  }

  public final void info(Object obj1) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1}));
    }
  }

  public final void debug(Object obj1) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1}));
    }
  }

  public final void severe(Object obj1, Object obj2) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2}));
    }
  }

  public final void warn(Object obj1, Object obj2) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2}));
    }
  }

  public final void info(Object obj1, Object obj2) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2}));
    }
  }

  public final void debug(Object obj1, Object obj2) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5}));
    }
  }


  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9}));
    }
  }

  public final void severe(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9,Object obj10) {
    if (isLoggable(LOG_LEVEL_SEVERE)) {
      log(LOG_LEVEL_SEVERE, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9,obj10}));
    }
  }

  public final void warn(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9,Object obj10) {
    if (isLoggable(LOG_LEVEL_WARNING)) {
      log(LOG_LEVEL_WARNING, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9,obj10}));
    }
  }

  public final void info(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9,Object obj10) {
    if (isLoggable(LOG_LEVEL_INFO)) {
      log(LOG_LEVEL_INFO, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9,obj10}));
    }
  }

  public final void debug(Object obj1, Object obj2, Object obj3, Object obj4, Object obj5, Object obj6, Object obj7
      , Object obj8, Object obj9,Object obj10) {
    if (isLoggable(LOG_LEVEL_DEBUG)) {
      log(LOG_LEVEL_DEBUG, getString(new Object[]{obj1, obj2, obj3, obj4,
          obj5, obj6, obj7, obj8, obj9,obj10}));
    }
  }

  public final Object clone() {
    try {
      return super.clone();
    } catch (CloneNotSupportedException e) {
      return new DefaultLog4Debug();
    }
  }

  private String getString(Object[] objs) {
    StringBuffer str = new StringBuffer();
    for (int n = 0; n < objs.length; n++) {
      str.append(protectedRender(objs[n]));
    }
    return str.toString();
  }

  private String protectedRender(Object obj) {
    try {
      return render(obj);
    } catch (Throwable e) {
      return "[error on rendering obj: "+e.toString()+"]";
    }
  }

  protected String render(Object obj) {
    return obj==null?null:obj.toString();
  }

  public final boolean isDebugEnabled() {
    return isLoggable(LOG_LEVEL_DEBUG);
  }

  public final boolean isInfoEnabled() {
    return isLoggable(LOG_LEVEL_INFO);
  }

  public final boolean isWarnEnabled() {
    return isLoggable(LOG_LEVEL_WARNING);
  }

  public final boolean isSevereEnabled() {
    return isLoggable(LOG_LEVEL_SEVERE);
  }

  protected abstract boolean isLoggable(int logLevel);

  protected final static int LOG_LEVEL_DEBUG = 40;
  protected final static int LOG_LEVEL_INFO = 30;
  protected final static int LOG_LEVEL_WARNING = 20;
  protected final static int LOG_LEVEL_SEVERE = 10;
  protected final static int LOG_LEVEL_FATAL = 5;

}
